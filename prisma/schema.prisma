// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


// schema.prisma
model User {
  id                                String            @id @default(auto()) @map("_id") @db.ObjectId
  email                             String            @unique
  mobile                            String            @unique
  password                          String
  username                          String
  preferance_id                     String?           @db.ObjectId
  watchHistory                      WatchHistory[]
  favoriteGenres                    Genre[]
  dislikedGenres                    Genre[]
  Favorite                          Favorite[]
}

model Favorite {
  id                                String            @id @default(auto()) @map("_id") @db.ObjectId
  contentId                         String            @db.ObjectId
  Content                           Content           @relation(fields: [contentId], references: [id])
  user                              User              @relation(fields: [userId], references: [id])
  userId                            String            @db.ObjectId

  @@unique([userId, contentId])
}


model WatchHistory {
  id                                String            @id @default(auto()) @map("_id") @db.ObjectId
  user                              User              @relation(fields: [userId], references: [id])
  userId                            String            @db.ObjectId
  contentId                         String            @db.ObjectId
  Content                           Content           @relation(fields: [contentId], references: [id])
  watchedOn                         DateTime
  rating                            Int?
}

model Director {
  id                                String            @id @default(auto()) @map("_id") @db.ObjectId
  name                              String
  Content                           Content[]
}

model ContentActor {
  id                                String            @id @default(auto()) @map("_id") @db.ObjectId
  content_Id                        String            @db.ObjectId
  Content                           Content           @relation(fields: [content_Id], references: [id])
  actor_id                          String            @db.ObjectId
  actor                             Actor             @relation(fields: [actor_id], references: [id])
}

model Actor {
  id                                String            @id @default(auto()) @map("_id") @db.ObjectId
  name                              String
  contents                          ContentActor[]
}

model Content {
  id                                String            @id @default(auto()) @map("_id") @db.ObjectId
  releaseDate                       DateTime
  genres                            Genre[]
  director_id                       String            @db.ObjectId
  director                          Director          @relation(fields: [director_id], references: [id])
  actors                            ContentActor[]                        
  type                              ContentType
  title                             String
  description                       String
  episodes                          Episode[]
  favs                              Favorite[]
  watchs                            WatchHistory[]
}

enum ContentType {
  Movie
  TVShow
}

model Episode {
  id                                String            @id @default(auto()) @map("_id") @db.ObjectId
  tvShow                            Content           @relation(fields: [tvShowId], references: [id])
  tvShowId                          String            @db.ObjectId
  episodeNumber                     Int
  seasonNumber                      Int
}

enum Genre {
  Action
  Comedy
  Drama
  Fantasy
  Horror
  Romance
  SciFi
}